name: Update Fork
on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  update-fork:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Rebase to Upstream
        id: rebase
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          git remote add upstream https://github.com/zalando/spilo.git
          git fetch upstream

          # Check if the upstream branch is ahead of our fork
          echo "new_commits=$(git rev-list --count HEAD..upstream/master)" >> $GITHUB_OUTPUT

          git rebase upstream/master
          git push origin main --force

      - name: Tag Release
        if: ${{ steps.rebase.outputs.new_commits != 0 || github.event_name == 'workflow_dispatch' }}
        id: tag
        run: |
          new_tag="v$(date +'%Y%m%d.%H%M')"
          git tag -a "$new_tag" -m "$new_tag"
          git push origin $new_tag

          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}

  publish:
    if: ${{ needs.update-fork.outputs['new_tag'] != '' }}
    needs: update-fork
    name: Build and push Spilo multiarch images
    runs-on: ubuntu-22.04
    permissions:
      contents: 'read'
      packages: 'write'
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up packages
      run: sudo apt-get install -y docker-compose

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Derive spilo image name
      id: image
      working-directory: postgres-appliance
      run: |
        PGVERSION=$(sed -n 's/^ARG PGVERSION=\([1-9][0-9]*\).*$/\1/p' Dockerfile)
        IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$PGVERSION:${{ needs.update-fork.outputs.new_tag }}"
        echo "NAME=$IMAGE" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and export to local docker for testing
      uses: docker/build-push-action@v6
      with:
        context: "postgres-appliance/"
        load: true
        tags: ${{ steps.image.outputs.NAME }}

    - name: Test spilo docker image 
      env:
        SPILO_TEST_IMAGE: "${{ steps.image.outputs.NAME }}"
      run: |
        bash postgres-appliance/tests/test_spilo.sh 

    - name: Build arm64 additionaly and push multiarch image to ghcr
      uses: docker/build-push-action@v6
      with:
        context: "postgres-appliance/"
        push: true
        tags: "${{ steps.image.outputs.NAME }}"
        platforms: linux/amd64,linux/arm64
